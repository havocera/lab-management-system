name: Deploy Laboratory Management System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # 构建前端
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.API_URL || 'https://your-backend-domain.com/api' }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: dist/

  # 构建Docker镜像
  build-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - name: frontend
            context: .
            dockerfile: Dockerfile
          - name: backend
            context: endtp
            dockerfile: Dockerfile
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        dockerfile: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # 部署到云服务器 (可选)
  deploy-to-server:
    needs: [build-frontend, build-images]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          # 拉取最新代码
          cd /opt/lab-management-system
          git pull origin main
          
          # 登录到GitHub Container Registry
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # 更新Docker镜像
          docker compose pull
          
          # 重启服务
          docker compose up -d
          
          # 清理旧镜像
          docker image prune -f

  # GitHub Pages部署 (仅前端) - 手动启用
  # 要启用Pages部署，请：
  # 1. 访问仓库Settings > Pages
  # 2. Source选择"GitHub Actions"
  # 3. 取消注释以下代码块
  
  # deploy-pages:
  #   needs: build-frontend
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   permissions:
  #     pages: write
  #     id-token: write
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   steps:
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: frontend-dist
  #       path: dist/
  #
  #   - name: Setup Pages
  #     uses: actions/configure-pages@v4
  #
  #   - name: Upload to GitHub Pages
  #     uses: actions/upload-pages-artifact@v3
  #     with:
  #       path: dist/
  #
  #   - name: Deploy to GitHub Pages
  #     id: deployment
  #     uses: actions/deploy-pages@v4